{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tenantId": {
            "type": "string"
        },
        "clientId": {
            "type": "string"
        },
        "clientSecret": {
            "type": "string"
        },
        "iotHubSkuName": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "S1",
                "S2"
            ],
            "metadata": {
                "description": "One of the supported SKUs: F1, S1 or S2"
            }
        },
        "capacityUnits": {
            "type": "int",
            "minValue": 1,
            "defaultValue": 1,
            "metadata": {
                "description": "Number of desired IoT Hub units. Restricted to 1 unit for F1. Can be set up to maximum number allowed for subscription."
            }
        },
        "d2cMessageRetentionInDaysPeriod": {
            "type": "int",
            "minValue": 1,
            "maxValue": 7,
            "defaultValue": 1,
            "metadata": {
                "description": "Retention time in days for device-to-cloud messages."
            }
        },
        "d2cPartitionCount": {
            "type": "int",
            "minValue": 2,
            "defaultValue": 2,
            "allowedValues": [
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32
            ],
            "metadata": {
                "description": "Number of desired partitions for device-to-cloud event ingestion.Restricted to 1 unit for F1"
            }
        },
        "appInsightsLocation": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "eastus",
                "northeurope",
                "southcentralus",
                "southeastasia",
                "westeurope",
                "westus2"
            ],
            "metadata": {
                "description": "specify the region for application insights"
            }
        },
        "readRegionLocation": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
              "description": "The location of the read region of the cosmos database account. For Azure Gov, China, and Germany, the allowed values are different."
            },
            "allowedValues": [
              "eastasia",
              "southeastasia",
              "centralus",
              "eastus",
              "eastus2",
              "westus",
              "northcentralus",
              "southcentralus",
              "northeurope",
              "westeurope",
              "japanwest",
              "japaneast",
              "brazilsouth",
              "australiaeast",
              "australiasoutheast",
              "southindia",
              "centralindia",
              "westindia",
              "canadacentral",
              "canadaeast",
              "uksouth",
              "ukwest",
              "westcentralus",
              "westus2",
              "koreacentral",
              "koreasouth"
            ]
        },
        "omsWorkspaceRegion": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "eastus",
                "westeurope",
                "southeastasia",
                "australiasoutheast"
            ],
            "metadata": {
                "description": "specify the region for oms workspace, if you have selected solution type as without monitoring this is optional"
            }
        },
        "omsAutomationRegion": {
            "type": "string",
            "defaultValue": "eastus2",
            "allowedValues": [
                "westeurope",
                "southeastasia",
                "eastus2",
                "southcentralus",
                "japaneast",
                "southeastasia",
                "southcentralus",
                "northeurope",
                "canadacentral",
                "australiasoutheast",
                "centralindia",
                "japaneast"
            ],
            "metadata": {
                "description": "specify the region for oms automation account, if you have selected solution type as without monitoring this is optional"
            }
        },
        "dataRetention": {
            "type": "int",
            "defaultValue": 7,
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "specify the oms retention period in days, if you have selected solution type as without monitoring this is optional"
            }
        }
    },
    "variables": {
        "apiVersions": {
            "documentDbApiVersion": "2015-04-08",
            "iotHubApiversion": "2016-02-03",
            "notificationHubApiVersion": "2014-09-01",
            "appInsightsApiVersion": "2014-04-01",
            "webAppApiVersion": "2015-08-01",
            "omsApiVersion": "2015-03-20",
            "omsDataApiVersion": "2015-11-01-preview",
            "trafficManagerApiVersion": "2017-05-01"
        },
        "documentDbSettings": {
            "location": "[variables('location')]",
            "cosmosDbAccountName": "[concat('cosmosdb', variables('suffix'))]",
            "kind": "GlobalDocumentDB",
            "databaseAccountOfferType": "Standard",
            "readRegionLocation": "[parameters('readRegionLocation')]"
        },
        "webSiteSettings": {
            "location": "[variables('location')]",
            "locationDr": "[variables('location')]",
            "tenantId": "[parameters('tenantId')]",
            "clientId": "[parameters('clientId')]",
            "clientSecret": "[parameters('clientSecret')]",
            "dataPacketPackageuri": "https://projectiot.blob.core.windows.net/whitegoods/DataPacket.zip",
            "deviceManagementPortalPackageuri": "https://projectiot.blob.core.windows.net/whitegoods/DeviceManagement.zip",
            "webAppHostingPlanName": "[concat('webSiteplan', variables('suffix'))]",
            "webAppSkuName": "F1",
            "dataPacketWebSiteName": "[concat('datapacket', variables('suffix'))]",
            "deviceManagementPortalWebSiteName": "[concat('devicemanagement', variables('suffix'))]",
            "dataPacketWebSiteNameDr": "[concat('datapacketDr', variables('suffix'))]",
            "deviceManagementPortalWebSiteNameDr": "[concat('devicemanagementDr', variables('suffix'))]",
            "iotHubKeyName": "iothubowner",
            "cosmosDbName": "MSIoT",
            "cosmosDbColTemplateName": "Templates",
            "cosmosDbColMessagesName": "Messages",
            "cosmosDbColGroupsName": "Groups",
            "appInsightsLocation": "[parameters('appInsightsLocation')]",
            "dataPacketAppInsights": "[concat('dataPackAppInsights', variables('suffix'))]",
            "deviceManagementAppInsights": "[concat('devMngAppInsights', variables('suffix'))]"
        },
        "notificationHub": {
            "location": "[variables('location')]",
            "skuName": "free",
            "namespaceType": "NotificationHub",
            "notificationHubNamespaceName": "[concat('hubns', variables('suffix'))]",
            "notificationHubName": "[concat('hunname', variables('suffix'))]"
        },
        "omsSettings": {
            "omsWorkspaceName": "[concat('omsws', variables('suffix'))]",
            "omsWorkspaceRegion": "[parameters('omsWorkspaceRegion')]",
            "omsAutomationRegion": "[parameters('omsAutomationRegion')]",
            "omsAutomationAccountName": "[concat('autoupdate', variables('suffix'))]",
            "dataRetention": "[parameters('dataRetention')]"
        },
        "iotHubSettings": {
            "location": "[variables('location')]",
            "iotHubName": "[concat('iothub', variables('suffix'))]",
            "skuName": "[parameters('iotHubSkuName')]",
            "capacityUnits": "[parameters('capacityUnits')]",
            "d2cMessageRetentionInDaysPeriod": "[parameters('d2cMessageRetentionInDaysPeriod')]",
            "d2cPartitionCount": "[parameters('d2cPartitionCount')]"
        },
        "location": "[resourceGroup().location]",
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "deploymentApiVersion": "2016-02-01",
        "baseUrl": "https://raw.githubusercontent.com/sysgain/whitegoods/staging/"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "IotHub",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iot-hub.json','?token=AYpAeMzIs1YaxF4zcLdxe1-C9pr2z2m1ks5a4X75wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "OMSWorkSpace",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/oms-workspace.json','?token=AYpAeCV80yrwg11AqZVr0BCoIVicmFFLks5a4X5HwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "DocumentDB",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/documentdb.json','?token=AYpAeCL7SHVIJB-7hg3C2EWP_oZZOuHOks5a4X3awA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "NotificataionHub",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/notification-hub.json','?token=AYpAeJsy4eCMTonlmVxnWG-XwSoNBTD3ks5a4X4pwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "notificationHub": {
                        "value": "[variables('notificationHub')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "AppComponents",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "IotHub",
                "DocumentDB",
                "NotificataionHub"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/app-components.json','?token=AYpAeBr7r_7NMh8HFkjL2FTG3Mmxhl1Yks5a4X2BwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "webSiteSettings": {
                        "value": "[variables('webSiteSettings')]"
                    },
                    "documentDbEndpoint": {
                        "type": "[reference('DocumentDB').outputs.cosmosDBAccountEndPoint.value]"
                    },
                    "cosmosDbprimaryMasterKey": {
                        "type": "[reference('DocumentDB').outputs.cosmosDBAccountKey.value]"
                    },
                    "iotHubHostName": {
                        "type": "[reference('IotHub').outputs.iotHubHostName.value]"
                    },
                    "iotHubPrimaryKey": {
                        "type": "[reference('IotHub').outputs.iotHubPrimaryKey.value]"
                    },
                    "notificationHubConnectionString": {
                        "type": "[reference('NotificataionHub').outputs.notificationHubConnectionString.value]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "iotHubName": {
            "type": "string",
            "value": "[variables('iotHubSettings').iotHubName]"
        },
        "cosmosDBAccountName": {
            "type": "string",
            "value": "[reference('DocumentDB').outputs.cosmosDBAccountName.value]"
        },
        "cosmosDBAccountEndPoint": {
            "type": "string",
            "value": "[reference('DocumentDB').outputs.cosmosDBAccountEndPoint.value]"
        },
        "cosmosDBAccountKey": {
            "type": "string",
            "value": "[reference('DocumentDB').outputs.cosmosDBAccountKey.value]"
        },
        "dataPacketDesignerUrl": {
            "type": "string",
            "value": "[concat('https://', variables('webSiteSettings').dataPacketWebSiteName,'.azurewebsites.net')]"
        },
        "deviceManagementPortalUrl": {
            "type": "string",
            "value": "[concat('https://', variables('webSiteSettings').deviceManagementPortalWebSiteName,'.azurewebsites.net')]"
        }
    }
}