{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "solution type": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "core-solution",
                "core-with-monitoring",
                "core-with-hardening",
                "core-with-monitoring-hardening"
            ],
            "metadata": {
                "description": "choose your solution type to deploy"
            }
        },
        "omsWorkspaceRegion": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "australiasoutheast",
                "canadacentral",
                "centralindia",
                "eastus",
                "japaneast",
                "southeastasia",
                "uksouth",
                "westeurope"
            ],
            "metadata": {
                "description": "Choose location for OMS Log Analytics"
            }
        },
        "readRegionLocation": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The location of the read region of the cosmos database account. For Azure Gov, China, and Germany, the allowed values are different."
            },
            "allowedValues": [
                "eastasia",
                "southeastasia",
                "centralus",
                "eastus",
                "eastus2",
                "westus",
                "northcentralus",
                "southcentralus",
                "northeurope",
                "westeurope",
                "japanwest",
                "japaneast",
                "brazilsouth",
                "australiaeast",
                "australiasoutheast",
                "southindia",
                "centralindia",
                "westindia",
                "canadacentral",
                "canadaeast",
                "uksouth",
                "ukwest",
                "westcentralus",
                "westus2",
                "koreacentral",
                "koreasouth"
            ]
        },
        "appInsightsLocation": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "eastus",
                "northeurope",
                "southcentralus",
                "southeastasia",
                "westeurope",
                "westus2"
            ],
            "metadata": {
                "description": "specify the region for application insights"
            }
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "tenantId of the created Azure active directory application"
            }
        },
        "clientId": {
            "type": "string",
            "metadata": {
                "description": "applicationID of the created Azure active directory application"
            }
        },
        "objectId": {
            "type": "string",
            "metadata": {
                "description": "objectId of the created Azure active directory application"
            }
        },
        "clientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "clientSecret of the created Azure active directory application"
            }
        },
        "azureAccountName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "azure portal login username"
            }
        },
        "azurePassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "azure portal login password"
            }
        },
        "sessionId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "provide the guid prefix for the runbook job to be created"
            }
        },
        "timeSeriesInsights": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "if need time series insights for monitoring of iot hub select Yes otherwise select No"
            }
        },
        "timeSeriesInsightslocation": {
            "type": "string",
            "defaultValue": "East US",
            "allowedValues": [
                "East US",
                "East US2",
                "North Europe",
                "West Europe",
                "West US"
            ],
            "metadata": {
                "description": "specify the region for time series insights"
            }
        }
    },
    "variables": {
        "apiVersions": {
            "webAppApiVersion": "2015-08-01"
        },
        "omsSettings": {
            "omsWorkspaceName": "[concat('omsworkspace', variables('suffix'))]",
            "omsWorkspaceRegion": "[parameters('omsWorkspaceRegion')]",
            "omsLogAnalyticsSku": "standalone",
            "dataRetention": 7
        },
        "iotHubSettings": {
            "location": "[variables('location')]",
            "iotHubName": "[concat('IoTHub',variables('suffix'))]",
            "keyName": "iothubowner",
            "skuName": "B1",
            "skuName1":"S1",
            "capacityUnits": 1,
            "d2cMessageRetentionInDaysPeriod": 1,
            "d2cPartitionCount": 2,
            "consumerGroupName": "$Default"
        },
        "documentDbSettings": {
            "location": "[variables('location')]",
            "cosmosDbAccountName": "[concat('cosmosdb', variables('suffix'))]",
            "kind": "GlobalDocumentDB",
            "cosmosDbName": "MSIoT",
            "cosmosDBMessageCollectionName": "Messages",
            "databaseAccountOfferType": "Standard",
            "readRegionLocation": "[parameters('readRegionLocation')]",
            "cosmosDbColTemplateName": "Templates",
            "cosmosDbColMessagesName": "Messages",
            "cosmosDbColGroupsName": "Groups"
        },
        "notificationHub": {
            "location": "[variables('location')]",
            "skuName": "free",
            "namespaceType": "NotificationHub",
            "notificationHubNamespaceName": "[concat('NotificationHubNS', variables('suffix'))]",
            "notificationHubName": "[concat('NotificationHub', variables('suffix'))]"
        },
        "appInsights": {
            "location": "[parameters('appInsightsLocation')]",
            "appInsightResourceName": "[concat('AppInsights', uniquestring(resourceGroup().id))]"
        },
        "automationSettings": {
            "automationAccountName": "[concat('AutomationAcc', variables('suffix'))]",
            "automationLocation": "eastus2",
            "automationSku": "Free",
            "runbookName": "container",
            "moduleName": "AzureADPreview",
            "azureAdPreviewModuleUri": "https://projectiot.blob.core.windows.net/whitegoods/AzureADPreview.zip",
            "runbookUri": "[concat(variables('baseUrl'),'scripts/initializecosmosdb.ps1','?token=AYpAeEnaWm0shigLrtsbgIRntntx4H1Bks5bREP4wA%3D%3D')]",
            "sessionId": "[parameters('sessionId')]",
            "tenantId": "[parameters('tenantId')]",
            "clientId": "[parameters('clientId')]",
            "clientSecret": "[parameters('clientSecret')]",
            "objectId": "[parameters('objectId')]",
            "azureAccountName": "[parameters('azureAccountName')]",
            "azurePassword": "[parameters('azurePassword')]"
        },
        "trafficManagerSettings": {
            "trafficManagerName1": "[concat('devicemanagetm', variables('suffix'))]",
            "trafficRoutingMethod": "Priority"
        },
        "streamAnalytics": {
            "location": "[variables('location')]",
            "streamAnalyticsjobname": "[concat('StreamAnalytics', variables('suffix'))]",        
            "sku":"Standard",
            "suiteType": "RemoteMonitoring",
            "telemetryCGName": "telemetrycg"        
        },
        "timeSeriesInsights": {
            "timeSeriesInsightslocation": "[parameters('timeSeriesInsightslocation')]",
            "timeSeriesInsightsName": "[concat('timeseriesinsights', variables('suffix'))]",
            "dataRetentionTime": "P31D",
            "skuCapacity": 1,
            "skuSize": "S1",
            "skuTier": "Standard",
            "skuName": "S1"    
        },
        "webSiteSettings": {
            "location": "[variables('location')]",
            "tenantId": "[parameters('tenantId')]",
            "clientId": "[parameters('clientId')]",
            "clientSecret": "[parameters('clientSecret')]",
            "dataPacketPackageuri": "https://projectiot.blob.core.windows.net/whitegoods/DataPacket.zip",
            "deviceManagementPortalPackageuri": "https://projectiot.blob.core.windows.net/whitegoods/DeviceManagement.zip",
            "webAppHostingPlanName": "[concat('AppPlanWG', variables('suffix'))]",
            "webAppSkuName": "B1",
            "dataPacketWebSiteName": "[concat('datapacket', variables('suffix'))]",
           "dataPacketWebSiteNameDr": "[concat('DatapacketDr', variables('suffix'))]",
           "deviceManagementPortalWebSiteName": "[concat('devicemanagement', variables('suffix'))]"
        },
        
       
       
        "location": "[resourceGroup().location]",
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
        "deploymentApiVersion": "2016-02-01",
        "baseUrl": "https://raw.githubusercontent.com/sysgain/whitegoods/core/"
    },
    "resources": [
        {
            "name": "OmsWorkSpace",
            "type": "Microsoft.Resources/deployments",
            "condition": "[or(equals(parameters('solution Type'),'core-with-monitoring'), equals(parameters('solution Type'),'core-with-monitoring-hardening'))]",
            "apiVersion": "2016-02-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'),'nested/omsworkspace.json?token=AT7l1QNmi__pk-_7-k8YJc3IyXpjzShMks5bP1tSwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "name": "IotHubCore",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-solution')]",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iot-hub.json','?token=AYpAeGVqpUvCVXoYKs-lzhg_eIMj13nBks5bREQEwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    }
                }
            }
        },
        {
            "name": "IotHubWm",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-with-monitoring')]",
            "apiVersion":"2016-02-01",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iot-hub.json','?token=AYpAeKrLtNVuN6SqUICe3RRT3-0AK4pxks5bPIpuwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "name": "IotHubHa",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-with-hardening')]",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iot-hub.json','?token=AYpAeOZBSZasQIjEVpkjqKhCyiFvWtgtks5bPa8ewA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    }
                }
            }
        },
        {
            "name": "IotHubWmHa",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-with-monitoring-hardening')]",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iot-hub.json','?token=AYpAeG29yy2Nb-acG-uxJcDRdsgCfEgKks5bPJUcwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "name": "TimeSeriesInsightsWm",
            "type": "Microsoft.Resources/deployments",
            "condition": "[and(equals(parameters('solution Type'),'core-with-monitoring'),equals(parameters('timeSeriesInsights'),'Yes'))]",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "IotHubWm"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/timeseriesinsights.json','?token=AYpAeBPf6dFqS1WMVTpdT2C6iOUeq6Yzks5bPIqAwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "timeSeriesInsights": {
                        "value": "[variables('timeSeriesInsights')]"
                    },
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    }
                }
            }
        },
        {
            "name": "TimeSeriesInsightsWmHa",
            "type": "Microsoft.Resources/deployments",
            "condition": "[and(equals(parameters('solution Type'),'core-with-monitoring-hardening'),equals(parameters('timeSeriesInsights'),'Yes'))]",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "IotHubWmHa"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/timeseriesinsights.json','?token=AYpAeBPf6dFqS1WMVTpdT2C6iOUeq6Yzks5bPIqAwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "timeSeriesInsights": {
                        "value": "[variables('timeSeriesInsights')]"
                    },
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    }
                }
            }
        },
        {
            "name": "DocumentDBCore",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-solution')]",
            "apiVersion":"2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/documentdb.json','?token=AYpAeAbVKYFWoqLr619lbDtO39ch5SNKks5bREQCwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    }
                }
            }
        },
        {
            "name": "DocumentDBWm",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-with-monitoring')]",
            "apiVersion": "2016-02-01",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/documentdb.json','?token=AYpAeDeINpHjoYW3t2iAQUan0aZ0ZYUbks5bPIpswA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "name": "DocumentDBHa",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-with-hardening')]",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/documentdb.json','?token=AYpAeKhiK_eDOH1FSANLx4DzTblILBL7ks5bPa8hwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    }
                }
            }
        },
        {
            "name": "DocumentDBWmHA",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-with-monitoring-hardening')]",
            "apiVersion":  "2016-02-01",
            "dependsOn": [
                "OMSWorkSpace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/documentdb.json','?token=AYpAeMBbQyi6TYV7LOI0LrELknuDqeMYks5bPJUbwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    }
                }
            }
        },
        {
            "name": "NotificationHubCoreWm",
            "type": "Microsoft.Resources/deployments",
            "condition": "[or(equals(parameters('solution Type'),'core-solution'), equals(parameters('solution Type'),'core-with-monitoring'))]",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/notification-hub.json','?token=AYpAeACn0ns2CtvTMbkap1blO9G8CF9_ks5bREQHwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "notificationHub": {
                        "value": "[variables('notificationHub')]"
                    }
                }
            }
        },
        {
            "name": "NotificationHubHAWmHa",
            "type": "Microsoft.Resources/deployments",
            "condition": "[or(equals(parameters('solution Type'),'core-with-hardening'), equals(parameters('solution Type'),'core-with-monitoring-hardening'))]",
            "apiVersion": "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/notification-hub.json','?token=AYpAeACn0ns2CtvTMbkap1blO9G8CF9_ks5bREQHwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "notificationHub": {
                        "value": "[variables('notificationHub')]"
                    }
                }
            }
        },
        {
            "name": "AppInsights",
            "type": "Microsoft.Resources/deployments",
            "condition": "[or(equals(parameters('solution Type'),'core-with-monitoring'), equals(parameters('solution Type'),'core-with-monitoring-hardening'))]",
            "apiVersion":  "2016-02-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/app-insights.json','?token=AYpAePSZSZ13tHU_DBenxbGCAZ3--EXfks5bPIpowA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    }
                }
            }
        },
        {
            "name": "RunBookCoreWm",
            "type": "Microsoft.Resources/deployments",
            "condition": "[or(equals(parameters('solution Type'),'core-solution'), equals(parameters('solution Type'),'core-with-monitoring'))]",
            "apiVersion": "2016-02-01",
            "dependsOn": [
             "AppComponents"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/automation-acc.json','?token=AYpAeD62xSzIcyL70dI6OgY5qXMJddkwks5bREP_wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "automationSettings": {
                        "value": "[variables('automationSettings')]"
                    },
                    "datapacketUri": {
                        "value": "[concat('https://', variables('webSiteSettings').dataPacketWebSiteName,'.azurewebsites.net')]"
                    },
                    "deviceManagementUri": {
                        "value":"[concat('https://', variables('webSiteSettings').deviceManagementPortalWebSiteName,'.azurewebsites.net')]"
                    }
                }
            } 
           
        },
        {
            "name": "RunBookHaWmHa",
            "type": "Microsoft.Resources/deployments",
            "condition": "[or(equals(parameters('solution Type'),'core-with-hardening'), equals(parameters('solution Type'), 'core-with-monitoring-hardening'))]",
            "apiVersion": "2016-02-01",
            "dependsOn": [
               "TrafficManagerApps"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/automation-acc.json','?token=AYpAeDHwFSunE2iL4ykDYiQUkSPzZzNJks5bRaoNwA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "automationSettings": {
                        "value": "[variables('automationSettings')]"
                    },
                    "datapacketUri": {
                        "value": "[concat('https://', variables('webSiteSettings').dataPacketWebSiteName,'.azurewebsites.net')]"
                    },
                    "datapacketUriDr": {
                        "value": "[concat('https://', variables('webSiteSettings').dataPacketWebSiteNameDr,'.azurewebsites.net')]"
                    },
                    "deviceManagementUri": {
                        "value": "[concat('http://', variables('trafficManagerSettings').trafficManagerName1,'.trafficmanager.net')]"
                    }
                }
            }
        },
        {
            "name": "StreamAnalyticsCoreWm",
            "type": "Microsoft.Resources/deployments",
            "condition": "[or(equals(parameters('solution Type'),'core-solution'), equals(parameters('solution Type'),'core-with-monitoring'))]",
            "apiVersion":  "2016-02-01",
            "dependsOn": [
                "RunBookCoreWm"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/streamanalytics.json','?token=AYpAeBMv9xMeo4umQMIFUrZyrgRsZW5Qks5bREP7wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "streamAnalytics": {
                        "value": "[variables('streamAnalytics')]"
                    },
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    }
                }
            }
        },
        {
            "name": "StreamAnalyticsHaWmHa",
            "type": "Microsoft.Resources/deployments",
            "condition": "[or(equals(parameters('solution Type'),'core-with-hardening'), equals(parameters('solution Type'), 'core-with-monitoring-hardening'))]",
            "apiVersion":  "2016-02-01",
            "dependsOn": [
                "RunBookHaWmHa"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/streamanalytics.json','?token=AYpAeBMv9xMeo4umQMIFUrZyrgRsZW5Qks5bREP7wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "streamAnalytics": {
                        "value": "[variables('streamAnalytics')]"
                    },
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    }
                }
            }
        },
        {
            "name": "AppComponentsCore",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-solution')]",
            "apiVersion":  "2016-02-01",
            "dependsOn": [
                "IotHubCore",
                "DocumentDBCore",
                "NotificationHubCoreWm"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/app-components.json','?token=AYpAePglTJMgJG6S-G5eDzuaHELaF8mQks5bREP9wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webSiteSettings": {
                        "value": "[variables('webSiteSettings')]"
                    },
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    },
                    "notificationHub": {
                        "value": "[variables('notificationHub')]"
                    }
                }
            }
        },
        {
            "name": "AppComponentsWm",
            "type": "Microsoft.Resources/deployments",
            "condition": "[equals(parameters('solution Type'),'core-with-monitoring')]",
            "apiVersion":  "2016-02-01",
            "dependsOn": [
                "IotHubWm",
                "DocumentDBWm",
                "NotificationHubCoreWm"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/app-components.json','?token=AYpAePglTJMgJG6S-G5eDzuaHELaF8mQks5bREP9wA%3D%3D')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webSiteSettings": {
                        "value": "[variables('webSiteSettings')]"
                    },
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "documentDbSettings": {
                        "value": "[variables('documentDbSettings')]"
                    },
                    "notificationHub": {
                        "value": "[variables('notificationHub')]"
                    },
                    "omsSettings": {
                        "value": "[variables('omsSettings')]"
                    },
                    "appInsights": {
                        "value": "[variables('appInsights')]"
                    }
                }
            }
        }








      
        
       
    ],
    "outputs": {
        "iotHubEndPoint": {
            "type": "string",
            "value": "[reference('IotHub').outputs.iotHubEndPoint.value]"
        },
        "cosmosDBAccountName": {
            "type": "string",
            "value": "[reference('DocumentDB').outputs.cosmosDBAccountName.value]"
        },
        "cosmosDBAccountEndPoint": {
            "type": "string",
            "value": "[reference('DocumentDB').outputs.cosmosDBAccountEndPoint.value]"
        },
        "cosmosDBAccountKey": {
            "type": "string",
            "value": "[reference('DocumentDB').outputs.cosmosDBAccountKey.value]"
        },
        "dataPacketDesignerUrl": {
            "type": "string",
            "value": "[concat('https://', variables('webSiteSettings').dataPacketWebSiteName,'.azurewebsites.net')]"
        },
        "deviceManagementPortalUrl": {
            "type": "string",
            "value": "[concat('https://', variables('webSiteSettings').deviceManagementPortalWebSiteName,'.azurewebsites.net')]"
        }
    }
}
